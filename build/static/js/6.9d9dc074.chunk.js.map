{"version":3,"sources":["Components/ContactAddForm/ContactAddForm.styled.jsx","Components/ContactAddForm/ContactAddForm.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactListItem/ContactListItem.styled.jsx","Components/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","views/ContactsView.js"],"names":["ContactAddFormEl","styled","form","styles","input","display","marginBottom","marginTop","label","button","width","fontSize","backgroundColor","borderRadius","border","cursor","ContactAddForm","useAddContactMutation","addContact","isLoading","data","useGetContactsQuery","onSubmit","e","preventDefault","find","name","target","elements","value","alert","toast","error","number","success","reset","style","type","pattern","title","required","disabled","ContactListEl","ul","ContactListItemEl","li","marginLeft","ContactListItem","onDelBtnClick","onClick","defaultProps","ContactList","contacts","useDeleteContactMutation","deleteContact","map","id","FilterEl","div","Filter","dispatch","useDispatch","onChange","filterInput","filterContact","filterSelector","state","filter","ContactsView","isFetching","useSelector","Spinner","contact","toLowerCase","includes"],"mappings":"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","file":"static/js/6.9d9dc074.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nconst ContactAddFormEl = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 2px solid black;\n  width: 450px;\n  padding: 20px;\n  margin-bottom: 20px;\n`\nexport default ContactAddFormEl\n","import ContactAddFormEl from './ContactAddForm.styled'\nimport { useGetContactsQuery } from '../../redux/contacts/apiService'\nimport { useAddContactMutation } from '../../redux/contacts/apiService'\nimport { toast } from 'react-hot-toast'\n\nconst styles = {\n  input: {\n    display: 'block',\n    marginBottom: '10px',\n    marginTop: '5px',\n  },\n  label: {\n    marginBottom: '10px',\n  },\n  button: {\n    width: '100px',\n    fontSize: '12px',\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid gray',\n    cursor: 'pointer',\n  },\n}\n\nexport default function ContactAddForm() {\n  const [addContact, { isLoading }] = useAddContactMutation()\n  const { data } = useGetContactsQuery()\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const contactsHaveDuplicate = data.find(\n      (data) => data.name === e.target.elements.name.value,\n    )\n\n    if (contactsHaveDuplicate) {\n      alert(`${e.target.elements.name.value} is already in contacts`)\n      toast.error('Contact not added')\n    } else {\n      addContact({\n        name: e.target.elements.name.value,\n        number: e.target.elements.number.value,\n      })\n      toast.success('Contact added')\n    }\n\n    e.target.reset()\n  }\n\n  return (\n    <>\n      <ContactAddFormEl onSubmit={handleSubmit}>\n        <label style={styles.label}>\n          Name\n          <input\n            style={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label style={styles.label}>\n          Number\n          <input style={styles.input} type=\"tel\" name=\"number\" required></input>\n        </label>\n        <button type=\"submit\" style={styles.button} disabled={isLoading}>\n          Add Contact\n        </button>\n      </ContactAddFormEl>\n    </>\n  )\n}\n","import styled from '@emotion/styled'\n\nconst ContactListEl = styled.ul`\n  padding: 0;\n  list-style: none;\n  width: 450px;\n  margin: 0px;\n`\n\nexport default ContactListEl\n","import styled from '@emotion/styled'\n\nconst ContactListItemEl = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n`\n\nexport default ContactListItemEl\n","import ContactListItemEl from '../ContactListItem/ContactListItem.styled'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n  button: {\n    width: '50px',\n    fontSize: '12px',\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid gray',\n    cursor: 'pointer',\n    marginLeft: '30px',\n  },\n}\n\nfunction ContactListItem({ name, number, onDelBtnClick }) {\n  return (\n    <ContactListItemEl>\n      {name}: {number}\n      <button\n        type=\"submit\"\n        name={name}\n        onClick={onDelBtnClick}\n        style={styles.button}\n      >\n        Delete\n      </button>\n    </ContactListItemEl>\n  )\n}\n\nContactListItem.propTypes = {\n  onDelBtnClick: PropTypes.func,\n  name: PropTypes.string,\n  number: PropTypes.string,\n}\n\nContactListItem.defaultProps = {\n  name: null,\n  number: null,\n  onDelBtnClick: () => null,\n}\n\nexport default ContactListItem\n","import ContactListEl from './ContactList.styled'\nimport PropTypes from 'prop-types'\nimport ContactListItem from '../ContactListItem/ContactListItem'\nimport { useDeleteContactMutation } from '../../redux/contacts/apiService'\n\nfunction ContactList({ contacts }) {\n  const [deleteContact] = useDeleteContactMutation()\n\n  return (\n    <ContactListEl>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onDelBtnClick={() => deleteContact(id)}\n        />\n      ))}\n    </ContactListEl>\n  )\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default ContactList\n","import styled from '@emotion/styled'\n\nconst FilterEl = styled.div`\n  margin-bottom: 20px;\n`\n\nexport default FilterEl\n","import FilterEl from './Filter.styled'\n\nimport { useDispatch } from 'react-redux'\nimport { filterContact } from '../../redux/contacts/filterSlice'\n\nconst styles = {\n  input: {\n    display: 'block',\n    marginTop: '5px',\n  },\n}\n\nfunction Filter() {\n  const dispatch = useDispatch()\n\n  const handleFilterChange = ({ target }) => {\n    const filterInput = target.value\n    dispatch(filterContact(filterInput))\n  }\n\n  return (\n    <FilterEl>\n      <label>\n        Find contacts by name\n        <input\n          style={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          // value={filter}\n          onChange={handleFilterChange}\n        ></input>\n      </label>\n    </FilterEl>\n  )\n}\n\nexport default Filter\n","export const filterSelector = (state) => state.filter.filter\n","import ContactAddForm from '../Components/ContactAddForm/ContactAddForm'\nimport ContactList from '../Components/ContactList/ContactList'\nimport Filter from '../Components/Filter/Filter'\nimport { useSelector } from 'react-redux'\nimport { useGetContactsQuery } from '../redux/contacts/apiService'\nimport { Spinner } from '../Components/Spinner/Spinner'\nimport { Toaster } from 'react-hot-toast'\nimport { filterSelector } from '../redux/contacts/contacts-selectors'\n\nexport default function ContactsView() {\n  const { data, isFetching } = useGetContactsQuery()\n\n  const filter = useSelector(filterSelector)\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n\n      <ContactAddForm />\n\n      <h2>Contacts</h2>\n\n      <Filter />\n\n      {isFetching && <Spinner />}\n\n      {data && (\n        <ContactList\n          contacts={data.filter((contact) =>\n            contact.name.toLowerCase().includes(filter),\n          )}\n        ></ContactList>\n      )}\n\n      <Toaster />\n    </>\n  )\n}\n"],"sourceRoot":""}