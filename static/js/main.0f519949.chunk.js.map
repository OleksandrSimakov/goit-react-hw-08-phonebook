{"version":3,"sources":["Components/ContactAddForm/ContactAddForm.styled.jsx","redux/contacts/apiService.js","Components/ContactAddForm/ContactAddForm.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactListItem/ContactListItem.styled.jsx","Components/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.jsx","redux/contacts/filterSlice.js","Components/Filter/Filter.jsx","Components/Spinner/Spinner.js","redux/contacts/contacts-selectors.js","Components/App.jsx","redux/store.js","index.js"],"names":["ContactAddFormEl","styled","form","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","deleteContact","mutation","id","url","method","invalidatesTags","addContact","newContact","body","useGetContactsQuery","useDeleteContactMutation","useAddContactMutation","styles","input","display","marginBottom","marginTop","label","button","width","fontSize","backgroundColor","borderRadius","border","cursor","ContactAddForm","isLoading","data","onSubmit","e","preventDefault","find","name","target","elements","value","alert","toast","error","number","success","reset","style","type","pattern","title","required","disabled","ContactListEl","ul","ContactListItemEl","li","marginLeft","ContactListItem","onDelBtnClick","onClick","defaultProps","ContactList","contacts","map","FilterEl","div","filterSlice","createSlice","initialState","filter","reducers","filterContact","state","action","payload","actions","filterReducer","reducer","Filter","dispatch","useDispatch","onChange","filterInput","spin","keyframes","Spinner","CgSpinner","size","filterSelector","App","isFetching","useSelector","contact","toLowerCase","includes","configureStore","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.0f519949.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nconst ContactAddFormEl = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 2px solid black;\n  width: 450px;\n  padding: 20px;\n  margin-bottom: 20px;\n`\nexport default ContactAddFormEl\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://6116cc32095013001796b0fe.mockapi.io',\n  }),\n  tagTypes: ['Contact'],\n\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contact'],\n    }),\n\n    deleteContact: builder.mutation({\n      query: (id) => ({\n        url: `/contacts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n\n    addContact: builder.mutation({\n      query: (newContact) => ({\n        url: '/contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n})\n\nexport const {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n  useAddContactMutation,\n} = contactsApi\n","import ContactAddFormEl from './ContactAddForm.styled'\nimport { useGetContactsQuery } from '../../redux/contacts/apiService'\nimport { useAddContactMutation } from '../../redux/contacts/apiService'\nimport { toast } from 'react-hot-toast'\n\nconst styles = {\n  input: {\n    display: 'block',\n    marginBottom: '10px',\n    marginTop: '5px',\n  },\n  label: {\n    marginBottom: '10px',\n  },\n  button: {\n    width: '100px',\n    fontSize: '12px',\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid gray',\n    cursor: 'pointer',\n  },\n}\n\nexport default function ContactAddForm() {\n  const [addContact, { isLoading }] = useAddContactMutation()\n  const { data } = useGetContactsQuery()\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const contactsHaveDuplicate = data.find(\n      (data) => data.name === e.target.elements.name.value,\n    )\n\n    if (contactsHaveDuplicate) {\n      alert(`${e.target.elements.name.value} is already in contacts`)\n      toast.error('Contact not added')\n    } else {\n      addContact({\n        name: e.target.elements.name.value,\n        number: e.target.elements.number.value,\n      })\n      toast.success('Contact added')\n    }\n\n    e.target.reset()\n  }\n\n  return (\n    <>\n      <ContactAddFormEl onSubmit={handleSubmit}>\n        <label style={styles.label}>\n          Name\n          <input\n            style={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label style={styles.label}>\n          Number\n          <input style={styles.input} type=\"tel\" name=\"number\" required></input>\n        </label>\n        <button type=\"submit\" style={styles.button} disabled={isLoading}>\n          Add Contact\n        </button>\n      </ContactAddFormEl>\n    </>\n  )\n}\n","import styled from '@emotion/styled'\n\nconst ContactListEl = styled.ul`\n  padding: 0;\n  list-style: none;\n  width: 450px;\n  margin: 0px;\n`\n\nexport default ContactListEl\n","import styled from '@emotion/styled'\n\nconst ContactListItemEl = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n`\n\nexport default ContactListItemEl\n","import ContactListItemEl from '../ContactListItem/ContactListItem.styled'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n  button: {\n    width: '50px',\n    fontSize: '12px',\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid gray',\n    cursor: 'pointer',\n    marginLeft: '30px',\n  },\n}\n\nfunction ContactListItem({ name, number, onDelBtnClick }) {\n  return (\n    <ContactListItemEl>\n      {name}: {number}\n      <button\n        type=\"submit\"\n        name={name}\n        onClick={onDelBtnClick}\n        style={styles.button}\n      >\n        Delete\n      </button>\n    </ContactListItemEl>\n  )\n}\n\nContactListItem.propTypes = {\n  onDelBtnClick: PropTypes.func,\n  name: PropTypes.string,\n  number: PropTypes.string,\n}\n\nContactListItem.defaultProps = {\n  name: null,\n  number: null,\n  onDelBtnClick: () => null,\n}\n\nexport default ContactListItem\n","import ContactListEl from './ContactList.styled'\nimport PropTypes from 'prop-types'\nimport ContactListItem from '../ContactListItem/ContactListItem'\nimport { useDeleteContactMutation } from '../../redux/contacts/apiService'\n\nfunction ContactList({ contacts }) {\n  const [deleteContact] = useDeleteContactMutation()\n\n  return (\n    <ContactListEl>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onDelBtnClick={() => deleteContact(id)}\n        />\n      ))}\n    </ContactListEl>\n  )\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default ContactList\n","import styled from '@emotion/styled'\n\nconst FilterEl = styled.div`\n  margin-bottom: 20px;\n`\n\nexport default FilterEl\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  filter: '',\n}\n\nexport const filterSlice = createSlice({\n  name: 'filter',\n  initialState,\n  reducers: {\n    filterContact(state, action) {\n      state.filter = action.payload\n    },\n  },\n})\n\nexport const { filterContact } = filterSlice.actions\n\nexport const filterReducer = filterSlice.reducer\n","import FilterEl from './Filter.styled'\n\nimport { useDispatch } from 'react-redux'\nimport { filterContact } from '../../redux/contacts/filterSlice'\n\nconst styles = {\n  input: {\n    display: 'block',\n    marginTop: '5px',\n  },\n}\n\nfunction Filter() {\n  const dispatch = useDispatch()\n\n  const handleFilterChange = ({ target }) => {\n    const filterInput = target.value\n    dispatch(filterContact(filterInput))\n  }\n\n  return (\n    <FilterEl>\n      <label>\n        Find contacts by name\n        <input\n          style={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          // value={filter}\n          onChange={handleFilterChange}\n        ></input>\n      </label>\n    </FilterEl>\n  )\n}\n\nexport default Filter\n","import styled from '@emotion/styled/macro'\nimport { keyframes } from '@emotion/react'\nimport { CgSpinner } from 'react-icons/cg'\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n\n100% {\n  transform: rotate(1turn);\n}\n`\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`\n\nSpinner.defaultProps = {\n  size: 40,\n}\n","export const filterSelector = (state) => state.filter.filter\n","import ContactAddForm from './ContactAddForm/ContactAddForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\nimport { useSelector } from 'react-redux'\nimport { useGetContactsQuery } from '../redux/contacts/apiService'\nimport { Spinner } from './Spinner/Spinner'\nimport { Toaster } from 'react-hot-toast'\nimport { filterSelector } from '../redux/contacts/contacts-selectors'\n\nexport default function App() {\n  const { data, isFetching } = useGetContactsQuery()\n\n  const filter = useSelector(filterSelector)\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n\n      <ContactAddForm />\n\n      <h2>Contacts</h2>\n\n      <Filter />\n\n      {isFetching && <Spinner />}\n\n      {data && (\n        <ContactList\n          contacts={data.filter((contact) =>\n            contact.name.toLowerCase().includes(filter),\n          )}\n        ></ContactList>\n      )}\n\n      <Toaster />\n    </>\n  )\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { filterReducer } from './contacts/filterSlice'\nimport { contactsApi } from './contacts/apiService'\n\nexport default configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filter: filterReducer,\n  },\n\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(contactsApi.middleware),\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Components/App'\nimport 'modern-normalize/modern-normalize.css'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}